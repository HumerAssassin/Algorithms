public class Strassen {  
    private int array[][];  
    private int p[];  
    private int s[][];  
      
    public Strassen(){  
        p=new int[]{2,4,5,5,3};  
        array=new int[4][4];  
        s=new int[4][4];  
    }  
      
    public Strassen(int n,int []p){  
        this.p=new int[n+1];  
        this.array=new int[n][n];  
        this.s=new int[4][4];  
        for(int i=0;i<p.length;i++)  
            this.p[i]=p[i];  
    }  
    public void martixChain(){  
        int n=array.length;  
        for(int i=0;i<n;i++)   
            array[i][i]=0;  
        for(int r=2;r<=n;r++){  
            for(int i=0;i<=n-r;i++){  
                int j=i+r-1;  
                array[i][j]=array[i+1][j]+p[i]*p[i+1]*p[j+1];  
                s[i][j]=i;  
                for(int k=i+1;k<j;k++){  
                    int t=array[i][k]+array[k+1][j]+p[i]*p[k+1]*p[j];  
                    if(t<array[i][j]){  
                        array[i][j]=t;  
                        s[i][j]=k;  
                    }  
                }  
            }  
        }  
    }  
    public void traceBack(int a,int b){  
    	int i=b+1;
        if(a<b){  
            traceBack(a, s[a][b]);  
            traceBack(s[a][b]+1, b); 
            System.out.println(i+"个矩阵连乘：");
            System.out.println("first(A"+a+"toA"+s[a][b]+")then(A"+(s[a][b]+1)+"toA"+b+")final(A"+a+"toA"+b+")");
            System.out.println();
        }  
        i++;
    }  
    
    public static void main(String[] args) {  
        Strassen strassen=new Strassen();  
        strassen.martixChain();    
        strassen.traceBack(0, 3);  
    }  
}
