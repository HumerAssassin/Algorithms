public class KnapSack  
{  
 public static void main(String[] args)  
 {  
  Scanner in=new Scanner(System.in);  
  System.out.println("输入物品数量:");  
  int n=in.nextInt();  
  int[] w=new int[n];  
  int[] v=new int[n];  
  System.out.println("输入物品重量:");  
  for(int i=0;i<n;i++)  
  {  
   w[i]=in.nextInt();  
  }  
  System.out.println("输入这些物品的价值:");  
  for(int i=0;i<n;i++)  
  {  
   v[i]=in.nextInt();  
  }  
  System.out.println("输入背包的容量:");  
     int c=in.nextInt();  
     //按单位重量价值r[i]=v[i]/w[i]降序排列 
     double startTime=System.currentTimeMillis();  
  double[] r=new double[n];  
  int[] index=new int[n];  
  for(int i=0;i<n;i++)  
  {  
   r[i]=(double)v[i]/(double)w[i];  
   index[i]=i;  
  }  
  double temp=0;  
  for(int i=0;i<n-1;i++)  
  {  
   for(int j=i+1;j<n;j++)  
   {  
    if(r[i]<r[j])  
    {  
     temp=r[i];  
     r[i]=r[j];  
     r[j]=temp;  
     int x=index[i];  
     index[i]=index[j];  
     index[j]=x;  
    }  
   }  
  }    
  int[] w1=new int[n];  
  int[] v1=new int[n];  
  for(int i=0;i<n;i++)  
  {  
   w1[i]=w[index[i]];  
   v1[i]=v[index[i]];  
  }  
  System.out.println (Arrays.toString(w1));  
  System.out.println (Arrays.toString(v1));  
 
  KnapSackBackTrack(w1,v1,w1.length,c);  
  double endTime=System.currentTimeMillis();    
 }  
 public static void KnapSackBackTrack(int[] w,int[] v,int n,int c)  
 {  
  int CurrentWeight=0;  
  int CurrentValue=0;  
  int maxValue=0;  
  int i=0;  
  while(i>=0)  
  {  
   if(CurrentWeight+w[i]<=c)  
   {  
    CurrentWeight+=w[i];  
    CurrentValue+=v[i];  
    i++;  
   }  
   else  
    break;     
  }  
  if(i<n)  
  {  
   maxValue=CurrentValue;  
   System.out.println("背包中物品的最大价值为:"+maxValue);  
   return;  
  }  
  System.out.println("背包中物品的最大价值为:"+maxValue);  
  return;  
 }  
}
