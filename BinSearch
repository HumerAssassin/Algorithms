    /* 
     * 非递归二分查找算法 
     */  
    public static int binarySearch(Integer[]srcArray,int des)
    {            
        int low=0;                         //第一个位置     
        int high=srcArray.length-1;        //最高位置.数组长度-1,因为下标是从0开始的
        while(low<=high)
        {                      
            int middle=low+((high+low)/2); //中间位置计算   
            if(des==srcArray[middle])      //相等的话就返回对应的数组下标
            {         
                return middle;     
            }
            else if(des<srcArray[middle]) 
            {   
                high=middle-1;   
            }
            else
            {  
                low=middle+1;  
            }  
        }  
        return-1;  
    }  
     /* 
      * 递归方法实现二分查找法
      */  
    int BinSearch(int Array[],int low,int high,int key)  
    {  
        if (low<=high)  
        {  
            int mid = (low+high)/2;  
            if(key == Array[mid])  
                return mid;  
            else if(key<Array[mid])  
                return BinSearch(Array,low,mid-1,key);  
            else if(key>Array[mid])  
                return BinSearch(Array,mid+1,high,key);  
        }  
        else  
            return -1;  
    }  
    
